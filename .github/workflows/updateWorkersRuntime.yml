name: Update `workerd` runtime

on:
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize
    paths:
      - '**/package*.json'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  update-files:
    if: github.event_name == 'workflow_dispatch' || (startsWith(github.event.pull_request.head.ref, 'dependabot/npm_and_yarn/') && contains(github.event.pull_request.head.ref, '/cloudflare-') && github.actor == 'dependabot[bot]')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.head_ref }}
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: lts/*
          check-latest: true
          cache: 'npm'
      - run: npm ci --include-workspace-root
      # No need to run `npm ci` in submodule
      - name: Get minor version of workerd
        id: get-version
        run: |
          VERSION=$(npm ls workerd --json | jq -r '.. | .workerd?.version? | select(.)')
          MINOR_VERSION=${VERSION#*.}
          MINOR_VERSION_HYPHEN="${MINOR_VERSION:0:4}-${MINOR_VERSION:4:2}-${MINOR_VERSION:6:2}"
          echo "minor-version-hyphen=$MINOR_VERSION_HYPHEN" >> $GITHUB_OUTPUT
      - name: Update `compatibility_date`
        run: find . -maxdepth 2 -name "wrangler.toml" -print0 | xargs -0 sed -i "/compatibility_date = .*/s//compatibility_date = \"${{ steps.get-version.outputs.minor-version-hyphen }}\"/"
      - name: Git Setup
        run: |
          git config user.name "dependabot[bot]"
          git config user.email "dependabot[bot]@users.noreply.github.com"
      - run: find . -maxdepth 2 -name "wrangler.toml" -print0 | xargs -0 git add
      - run: git commit -m "Update \`compatibility_date\` in \`wrangler.toml\`" || echo "\`compatibility_date\` change not needed"
      - run: git push
      # crypto catalog
      - run: npm -w sidecar install -D miniflare
      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const { Miniflare } = require('miniflare');

            const mf = new Miniflare({
                modules: true,
                compatibilityFlags: ['nodejs_compat_v2'],
                script: `export default {
                    async fetch(request, env, ctx) {
                        return import('node:crypto').then(
                            ({ getCiphers, getCurves, getHashes }) =>
                                new Response(
                                    JSON.stringify({
                                        ciphers: getCiphers(),
                                        curves: getCurves(),
                                        hashes: getHashes(),
                                    }),
                                ),
                        );
                    }
                }`,
            });

            await mf
                .dispatchFetch('http://localhost:8787/')
                .then((response) => Promise.all([import('node:fs'), response.json()]))
                .then(([{ createWriteStream }, json]) => {
                    const writeStream = createWriteStream('shared/types/crypto/workers-crypto-catalog.mts', { encoding: 'utf8' });
                    writeStream.write(`export const workersCryptoCatalog = ${JSON.stringify(json, null, '\t')} as const`);
                    writeStream.end();
                })
                .finally(() => mf.dispose());
      - run: npm install -D prettier @demosjarco/prettier-config
      - run: npx prettier --no-config --write shared/types/crypto/workers-crypto-catalog.mts
      - run: git add shared/types/crypto/workers-crypto-catalog.mts
      - run: git commit -m "Updated crypto catalog" || echo "crypto catalog not touched"
      - run: git push
